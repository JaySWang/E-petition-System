<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">







	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/epetition?characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		destroy-method="destroy">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>model.Proposal</value>
				<value>model.Aspect</value>
				<value>model.CriticalQuestion</value>
				<value>model.ArgumentScheme</value>
				<value>model.AspectType</value>
				
				
				
			

			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
	</bean>





	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="hibernateTransactionAttributeSource"
		class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
		<property name="properties">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="dao" class="dao.DAOImpl">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<bean id="proposalDAO" class="dao.ProposalDAO">
		<property name="dao" ref="dao"></property>
	</bean>
		<bean id="aspectDAO" class="dao.AspectDAO">
		<property name="dao" ref="dao"></property>
	</bean>
	<bean id="criticalQuestionDAO" class="dao.CriticalQuestionDAO">
		<property name="dao" ref="dao"></property>
	</bean>
	<bean id="argumentSchemeDAO" class="dao.ArgumentSchemeDAO">
		<property name="dao" ref="dao"></property>
	</bean>
	
	
	
<!-- configure service Bean -->
	
	<bean id="proposalService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="hibernateTransactionManager">
		</property>
		<property name="target">
			<bean class="service.ProposalServiceImpl">
				<property name="pdao" ref="proposalDAO"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource" ref="hibernateTransactionAttributeSource">
		</property>
	</bean>
	
	
		<bean id="argumentSchemeService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="hibernateTransactionManager">
		</property>
		<property name="target">
			<bean class="service.ArgumentSchemeServiceImpl">
				<property name="asdao" ref="argumentSchemeDAO"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource" ref="hibernateTransactionAttributeSource">
		</property>
	</bean>
	
	
	
		<bean id="aspectService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="hibernateTransactionManager">
		</property>
		<property name="target">
			<bean class="service.AspectServiceImpl">
				<property name="adao" ref="aspectDAO"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource" ref="hibernateTransactionAttributeSource">
		</property>
	</bean>
	
		<bean id="criticalQuestionService"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="hibernateTransactionManager">
		</property>
		<property name="target">
			<bean class="service.CriticalQuestionServiceImpl">
				<property name="cdao" ref="criticalQuestionDAO"></property>
			</bean>
		</property>
		<property name="transactionAttributeSource" ref="hibernateTransactionAttributeSource">
		</property>
	</bean>
	
	
	
<!-- configure Action -->	


	<bean id="showAction" class="action.ShowAction"
		scope="prototype">
		<property name="ps" ref="proposalService">
		</property>
	</bean>
	
	
	<bean id="showProposalDetailAction" class="action.ShowProposalDetailAction"
		scope="prototype">
		<property name="ps" ref="proposalService">
		</property>
	</bean>

<bean id="voteProposalAction" class="action.VoteProposalAction"
		scope="prototype">
		<property name="ps" ref="proposalService">
		</property>
	</bean>



	<bean id="addProposalAction" class="action.AddProposalAction"
		scope="prototype">
		<property name="ps" ref="proposalService">
		</property>
	</bean>

	<bean id="addArgumentSchemeAction" class="action.AddArgumentSchemeAction"
		scope="prototype">
		<property name="ass" ref="argumentSchemeService">
		</property>
	</bean>




	<bean id="answerCriticalQuestionAction" class="action.AnswerCriticalQuestionAction"
		scope="prototype">
		<property name="cqs" ref="criticalQuestionService">
		</property>
	</bean>


<bean id="addCriticalQuestionAction" class="action.AddCriticalQuestionAction"
		scope="prototype">
		<property name="ps" ref="proposalService">
		</property>
	</bean>



</beans>